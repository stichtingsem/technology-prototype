openapi: 3.0.0
info:
  title: Student Information System API
  version: '1.0'
  description: |
    This is an API provided by the SIS in the SEM ecosystem, and is designed to enable a SIS to make the core information about teachers, learners, subjects and groups available to the rest of the ecosystem in a security and privacy cocnious way.

    # Events

    It is envisaged that the service implementing this API, also implements the generic [Events](https://stichtingsem.stoplight.io/docs/sem-technology-prototype/reference/events.v1.yaml) and [Webhooks](https://stichtingsem.stoplight.io/docs/sem-technology-prototype/reference/webhooks.v1.yaml) API to enable subscription to changes vs polling.

    Events generated by the SIS API are connected to state changes for key entities:

     - `sis.student` - A student has been created or modified   
     - `sis.student-delivery` - A students delivery information has been created or modified     
     - `sis.teacher` - A teacher has been created or modified
     - `sis.group` - A group has been modified (this is an aggregate event) - this means that basic metadata changed, a student added/removed, a teacher added or removed or a student subject choice modified within a group.     
     
    # Privacy and Scopes
     
    Data from the SIS can be sensitive, and the events and APIs available to a requesting service depend on the scopes requested and approved during setup.  The following scopes exist for the SIS, and map to the following entities and attributes:

    `sis.student-teacher-group`

    This scope enables a requestor to get basic information about a user (student or teacher) to enable that platform to present appropriate information or a basic profile for them and understand what groups or subjects they are enrolled in or teach.

    ### Event Access

    |Events|Event Data|Rationale|
    |------|---------|
    |sis.student|id, eckId, name, school, groups, subjects|To enable the requesting service to maintain a copy of basic (non-PII) student profile information|
    |sis.teacher|id, eckId, name, school, groups|To enable the requesting service to maintain a copy of basic (non-PII) teacher information|

    ### Data Visibility

    |Entity|Fields|Rationale|
    |------|---------|-----|
    |Student|id, eckId, name, school, groups, subjects|To enable the requesting service to maintain a copy of basic (non-PII) student profile information|
    |Teacher|id, eckId, name, school, groups|To enable the requesting service to maintain a copy of basic (non-PII) teacher information|

    `sis.student-teacher-delivery`

    This scope enables a requestor to get additional information required to support the physical delivery of books or other material directly to an individual.  This exchange includes PII, and would be requested in addition the basic `sis.student-teacher-group` scope, so the following should be read as additive to that scope.

    We have a principle to never send PII in events or store in an event log, so this event is only a notification.  The subscribing system must call back to retrieve the information.
     
    > NOTE: Do we never deliver anything to teachers?

    ### Event Access

    |Events|Event Data|Rationale|
    |------|---------|
    |sis.student-delivery|id, eckId|This is a notification only, as there should be no PII sent in events - only accessed by API calls.|

    ### Data Visibility

    |Entity|Fields|Rationale|
    |------|---------|-----|
    |Student Delivery|dateOfBirth, emailAddress, postcode, houseNumber, firstname, surname, tussenvoegsel|To enable the requesting service to maintain a copy of contact and delivery information|
  contact:
    name: SEM
    url: 'https://stichtingsem.org/'
servers:
  - url: 'https://example.stichtingsem.org/api'
    description: sisdata
components:
  schemas:
    school:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
      required:
        - id
        - name
      title: ''
      x-tags:
        - school
    student:
      type: object
      x-tags:
        - student
        - school
        - group
        - subject
      title: ''
      description: Access to non-sensitive student information for us in an LMS or LA.
      properties:
        id:
          type: string
        schemaVersion:
          type: integer
          description: 'schema version of this event/object. Start with 0, inclement when we have changes, so we know how to deserialise.'
        eckid:
          type: string
        firstname:
          type: string
        surname:
          type: string
        surnamePrefix:
          type: string
        schoolYear:
          type: string
          description: A reference to the school year for this student.
        school:
          $ref: '#/components/schemas/school'
        groups:
          type: array
          items:
            $ref: '#/components/schemas/groupReference'
        subjectChoices:
          type: array
          items:
            $ref: '#/components/schemas/subject-choice'
      required:
        - id
        - school
      x-examples:
        example-Student:
          id: fdff8a426c0a4e9996d70260de623add
          schemaVersion: 0
          firstname: Kim
          surname: Abrahamjan
          surnamePrefix: de
          schoolYear: 2020-2021
          school:
            id: '12345'
            name: TestCollege
          groups:
            - id: ae0119c7780f40b482f27ef7f3edc1e2
              name: W2C MM
          subjectChoices:
            - id: 65aad9b5acf74ab1a677095bb051fe91
              startDate: '2020-08-01'
              subjectCode: '0131'
              schoolSubjectName: Aardrijkskunde
              level: HAVO-2
              courseCode: W_HAVO
              courseYear: 2
    studentReference:
      type: object
      x-tags:
        - student
      title: ''
      description: Access to non-sensitive student information for us in an LMS or LA.
      properties:
        id:
          type: string
        eckid:
          type: string
        firstname:
          type: string
        surname:
          type: string
        surnamePrefix:
          type: string
      required:
        - id
    teacher:
      type: object
      x-tags:
        - teacher
        - group
        - school
      title: ''
      properties:
        id:
          type: string
        schemaVersion:
          type: integer
          description: 'schema version of this event/object. Start with 0, inclement when we have changes, so we know how to deserialise.'
        eckid:
          type: string
        firstname:
          type: string
        surname:
          type: string
        surnamePrefix:
          type: string
        schoolYear:
          type: string
          description: A reference to the school year for this teacher.
        school:
          $ref: '#/components/schemas/school'
        groups:
          type: array
          items:
            $ref: '#/components/schemas/groupReference'
          description: |
            Do we need this? This information is already available in groups. It will not be available in the beginning of the school year when the rosters are not complete. Neither LMS or LA need it to function.
      required:
        - id
        - school
      x-examples:
        example-1:
          id: 407b751eb2a44ad98ae3f7336c160fde
          schemaVersion: 0
          firstname: Anja
          surname: Jong
          surnamePrefix: de
          schoolYear: 2020-2021
          school:
            id: '1234'
            name: TestCollege
          groups:
            - id: 83302cc7309c497c9530537ac50248b3
              name: W2C MM
    teacherReference:
      type: object
      x-tags:
        - teacher
      title: ''
      properties:
        id:
          type: string
        eckid:
          type: string
        firstname:
          type: string
        surname:
          type: string
        surnamePrefix:
          type: string
      required:
        - id
    group:
      type: object
      x-examples:
        example-1:
          id: ae0119c7780f40b482f27ef7f3edc1e2
          schemaVersion: 0
          name: W2C MM
          school:
            id: '12345'
            name: TestCollege
          students:
            - id: ''
              firstname: Kim
              surname: Abrahamjan
              surnamePrefix: de
          teachers:
            - id: 407b751eb2a44ad98ae3f7336c160fde
              firstname: Anja
              surname: Jong
              surnamePrefix: de
          subjectChoices:
            - id: 65aad9b5acf74ab1a677095bb051fe91
              startDate: '2020-08-01'
              subjectCode: '0131'
              schoolSubjectName: Aardrijkskunde
              level: HAVO-2
              courseCode: W_HAVO
              courseYear: 2
          schoolYear: 2020-2021
      x-tags:
        - group
        - student
        - teacher
        - subject
        - school
      description: A group or other grouping of students.
      title: group
      properties:
        id:
          type: string
        schemaVersion:
          type: integer
          description: 'schema version of this event/object. Start with 0, inclement when we have changes, so we know how to deserialise.'
          default: 0
        name:
          type: string
        school:
          $ref: '#/components/schemas/school'
        students:
          type: array
          items:
            $ref: '#/components/schemas/studentReference'
        teachers:
          type: array
          items:
            $ref: '#/components/schemas/teacherReference'
        subjectChoices:
          type: array
          items:
            $ref: '#/components/schemas/subject-choice'
        schoolYear:
          type: string
          description: A reference to the school year for this group.
      required:
        - id
        - name
        - school
    groupReference:
      type: object
      x-examples: {}
      x-tags:
        - group
      description: ''
      properties:
        id:
          type: string
        name:
          type: string
      required:
        - id
        - name
    subject-choice:
      type: object
      title: ''
      x-tags:
        - subject
        - student
      x-examples: {}
      properties:
        id:
          type: string
        startDate:
          type: string
          format: date
          description: Start of this subject for the student. Date cannot be in the future.
        endDate:
          type: string
          format: date
          description: Start of this subject for the student. Date cannot be in the future. null if not ended
        subjectCode:
          type: string
          description: 'Officiële elementcode, bron: Ministerie van OCW, like https://zoek.officielebekendmakingen.nl/stcrt-2019-35044'
        schoolSubjectName:
          type: string
          description: Optional name of subject if different within specific school.
        level:
          type: string
          description: 'Official Level, followed by courseyear. example ''havo-1, vwo-2, etc.'''
        courseCode:
          type: string
          description: 'School code of the Level/couse/study. example ''Technasium'' This gives schools a way to name the course how they want it, while we still have a link with the official level'
        courseYear:
          type: integer
          description: Learning year
      required:
        - id
        - schoolSubjectName
    subject-choices:
      type: array
      items:
        $ref: '#/components/schemas/subject-choice'
      x-tags:
        - subject-choice
      description: List of possible subject choices
    student-delivery:
      title: student-delivery
      type: object
      description: Access to sensitive delivery information for a student.
      x-tags:
        - student
        - student-delivery
      properties:
        id:
          type: string
        schemaVersion:
          type: integer
          description: 'schema version of this event/object. Start with 0, inclement when we have changes, so we know how to deserialise.'
        eckid:
          type: string
        dateOfBirth:
          type: string
          format: date
        emailAddress:
          type: string
        postcode:
          type: string
        houseNumber:
          type: string
        firstname:
          type: string
          description: |
            Used for delivery
        surname:
          type: string
          description: |
            Used for delivery
        surnamePrefix:
          type: string
          description: Used for delivery
  securitySchemes:
    APIKey:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: ''
          refreshUrl: ''
          scopes:
            sis.student-teacher-group: 'Access to basic student, teacher and group information.'
            sis.student-teacher-delivery: Access to sensitive student and teacher delivery information.
paths:
  '/student/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: Get Student information by ID
      tags:
        - student
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/student'
      operationId: get-student-id
      description: 'Retrieve basic student information, including their groups and subject choices.'
      security:
        - APIKey:
            - sis.student-teacher-group
      parameters:
        - schema:
            type: string
          in: query
          name: schoolYear
          description: 'Request data for this student about a specific school year, if not provided, default to current.'
  '/teacher/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: Get Teacher by ID
      tags:
        - teacher
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/teacher'
      operationId: get-teacher-id
      security:
        - APIKey:
            - sis.student-teacher-group
      description: 'Retrieve basic teacher information including the groups they teach.  '
      parameters:
        - schema:
            type: string
          in: query
          name: schoolYear
          description: 'Request data for this teacher about a specific school year, if not provided, default to current.'
  '/group/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: Get group by ID
      tags:
        - group
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/group'
      operationId: get-group-id
      description: 'Retrieve information about a specific group by ID, this includes the teachers, students and their subject choices.'
      security:
        - APIKey:
            - sis.student-teacher-group
      parameters:
        - schema:
            type: string
          in: query
          name: schoolYear
          description: 'Request data for this group about a specific school year, if not provided, default to current.'
  '/student/{id}/delivery-information':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: Get Student delivery information by ID
      tags:
        - student
        - student-delivery
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/student-delivery'
      operationId: get-student-id-delivery-information
      description: Retrieve privacy sensitive delivery information by ID - this entity is only available to a specific scope.
      security:
        - APIKey:
            - sis.student-teacher-delivery
  /subjectchoices:
    parameters: []
    get:
      summary: GET Subject choices for next years
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/subject-choices'
      operationId: get-subjectchoices-schoolyear
      security:
        - APIKey:
            - sis.student-teacher-group
      description: Get possible subject choices for next schoolyears. User to create LML lists in MP while exact student / subjectchoices re not available
      parameters:
        - schema:
            type: string
          in: query
          name: schoolYear
          description: request this list for a particular schoolyear
tags:
  - name: group
  - name: student
  - name: student-delivery
  - name: teacher
