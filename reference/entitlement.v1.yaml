openapi: 3.0.0
info:
  title: Marketplace Entitlement API
  version: '1.0'
  description: |
    This is an API provided by the Marketplace in the SEM ecosystem, and is designed to enable a marketplace to make information about products that have been selected or purchased by a school or individual to be then added automatically into the LMS of the school, as well as be used by the specific Learning Application that has been purchased to ensure that all setup and provisioning has been completed in advance of access.

    It is envisaged that the service implementing this API, also implements the generic [Events](https://stichtingsem.stoplight.io/docs/sem-technology-prototype/reference/events.v1.yaml) and [Webhooks](https://stichtingsem.stoplight.io/docs/sem-technology-prototype/reference/webhooks.v1.yaml) API to enable subscription to changes vs polling.

    Events generated by the Entitlement API are connected to state changes.

     - `mp.entitlement.active` - First created and active
     - `mp.entitlement.refunded` - Refunded
     - `mp.entitlement.updated` - Modified in any other way 
  contact:
    name: SEM
    url: 'https://stichtingsem.org/'
servers:
  - url: 'https://example.stichtingsem.org/api'
    description: entitlement
paths:
  '/entitlements/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: Specific identifier of an entitlement.
    get:
      summary: Get a specific entitlement
      tags:
        - entitlements
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Entitlement'
      operationId: get-entitlements-by-id
      description: 'Retrieve the full specification for an entitlement from a marketplace, needs to confirm that the caller is able to access either based on their provider information (they can only see their own products) in the case of the provider scope.'
      security:
        - API Key - 1:
            - mp.entitlements.school
            - mp.entitlements.provider
  /entitlements/provider:
    parameters: []
    get:
      summary: Get all entitlements for a specific vendor (Learning Application Provider)
      tags:
        - entitlements
        - provider
      parameters:
        - in: query
          name: status
          description: |
            Filter by status
          schema:
            type: string
            example: active
        - in: query
          name: start
          description: 'Start point for pagination of results, defaults to 0,'
          schema:
            type: integer
            format: int32
          examples:
            default:
              value: 0
              summary: The start point for pagination
        - in: query
          name: limit
          description: 'Limit of number of results returned by page, defaults to 20 with max 100.'
          schema:
            type: integer
            maximum: 100
            format: int32
          examples:
            default:
              value: 20
              summary: The default value if none is provided
            max:
              value: 100
              summary: The largest recommended page size
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Entitlements'
      operationId: get-entitlements-provider-id
      security:
        - API Key - 1:
            - mp.entitlements.provider
      description: |-
        Get all entitlements related to products from a specific provider of a learning application (or other product used by a school).  It is assumed that at the point of setup and provision of an API key, that the provider name is also stored against the API key by the marketplace, so that all calls with this key will be filtered to that specific provider in the response.

        This API has pagination, using `start` and `limit`, with an optional `status` filter.
  '/entitlements/school/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: School identifier.
    get:
      summary: Get all entitlements for a specific school
      tags:
        - entitlements
        - school
      parameters:
        - in: query
          name: status
          description: Filter by status
          schema:
            type: string
            example: active
        - in: query
          name: start
          description: 'Start point for pagination of results, defaults to 0,'
          schema:
            type: integer
          examples:
            default:
              value: 0
              summary: The start point for pagination
        - in: query
          name: limit
          description: 'Limit of number of results returned by page, defaults to 20 with max 100.'
          schema:
            type: integer
            maximum: 100
          examples:
            default:
              value: 20
              summary: The default value if none is provided
            max:
              value: 100
              summary: The largest recommended page size
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Entitlements'
      operationId: get-entitlements-school-id
      security:
        - API Key - 1:
            - mp.entitlements.school
      description: |-
        Retrieve all entilements for a specific school, the school will have approved the LMS to have access to its Marketplace during the setup phase.

        This API has pagination, using `start` and `limit`, with an optional `status` filter.
components:
  schemas:
    Entitlement:
      title: Entitlement
      type: object
      description: 'The core object that expresses information about a product that a school or indivdiual has selected for use - typically via a LML, but not always.'
      properties:
        start:
          type: string
          format: date
          example: '2021-08-22'
        end:
          type: string
          format: date
        product:
          $ref: '#/components/schemas/Product'
        entitlee:
          oneOf:
            - $ref: '#/components/schemas/School'
            - $ref: '#/components/schemas/Individual'
        model:
          $ref: '#/components/schemas/BusinessModel'
        quantity:
          type: integer
          example: 100
          format: int32
          description: ''
        id:
          type: string
          example: 24e39454-5360-4ba4-819f-03e59b8dd679
        status:
          type: string
          example: active
          description: 'The status of the entitlement '
          enum:
            - refunded
            - active
          default: active
        marketplace:
          type: string
          example: 'https://iddink.nl'
          description: The marketplace that provided the entitlement.
      required:
        - start
        - end
        - product
        - entitlee
        - model
        - id
        - status
        - marketplace
      x-tags:
        - entitlements
    Product:
      title: Product
      type: object
      description: A product that can be accessed after being purchased or selected.
      x-tags:
        - entitlements
      properties:
        ean:
          type: string
        name:
          type: string
        defaultAccessUrl:
          type: string
          description: |
            This is the default URL to access the product - there may be more detailed structure and access points exchanged later between LA and LMS.
        provider:
          type: string
          description: 'Short name for a specific vendor, established (along with the vendor secret) at the point of setup.'
          example: e8346234-6bda-4c07-ab2e-a687a94430b2
      required:
        - ean
        - name
        - defaultAccessUrl
        - provider
    School:
      title: School
      type: object
      properties:
        id:
          type: string
          description: |
            The ID for the school (RIO?)
        name:
          type: string
          description: The name for the school
        group:
          type: array
          items:
            $ref: '#/components/schemas/Group'
        quantity:
          type: integer
          example: 100
          description: 'Quantity available to the school, used if no group selected.'
      required:
        - id
        - name
    Individual:
      title: Individual
      type: object
      description: Information about an individual who has an entitlement to use a specific product that they have purchased or selected.
      properties:
        id:
          type: string
          description: |
            A unique identifier for the purchaser.
        display_name:
          type: string
          description: The name of the person purchasing.
        email:
          type: string
          description: 'The email address of the person purchasing, used to notify the individual of fulfilment and provide access.'
        eckid:
          type: string
          description: 'If needed, the ECK-ID of the individual.'
      required:
        - id
        - display_name
        - email
      x-tags:
        - entitlements
    BusinessModel:
      title: BusinessModel
      type: object
      description: 'The model under which the entitlement has been granted, possible business models per product can be exchanged with the Marketplace by the Learning Application provider via the Catalogue API.'
      properties:
        id:
          type: string
          description: Unique identifier of the business model recognised by both the marketplace and the learning application.
          example: 24e39454-5360-4ba4-819f-03e59b8dd679
        name:
          type: string
          description: |
            A description of the business model so it can be displayed in the Marketplace or LMS if needed.
          example: pre-pay
        description:
          type: string
          description: A longer description of the business model.
          example: 'Pre-Pay: This product must be paid for before it can be used.'
      required:
        - id
        - name
      x-tags:
        - entitlements
    Group:
      title: Group
      type: object
      description: A sub-group within a school that the entitlement is applicable to - typically a subject and level.
      properties:
        subjectCode:
          type: string
          description: 'Officiële elementcode, bron: Ministerie van OCW'
        level:
          type: string
          description: 'havo-1, vwo-2, etc.'
        quantity:
          type: integer
          example: 100
          description: Quantity selected or purchased.
        schoolSubjectCode:
          type: string
          description: 'School description of this subject, may differ from standard.'
        schoolLevel:
          type: string
          description: 'School description of this level, may differ from standard.'
      required:
        - subjectCode
        - level
      x-tags:
        - entitlements
    Entitlements:
      title: Entitlements
      type: array
      items:
        $ref: '#/components/schemas/Entitlement'
      description: This is a list of entitlements that can be made available or retrieve in bulk.
      x-tags:
        - entitlements
  securitySchemes:
    API Key - 1:
      type: oauth2
      flows:
        implicit:
          scopes:
            mp.entitlements.school: Can see all entitlements created for a specific school regardless of vendor (e.g. a LMS)
            mp.entitlements.provider: Can see all entitlements created for products that you sell in the Marketplace (e.g. a LA)
tags:
  - name: entitlements
  - name: provider
  - name: school
