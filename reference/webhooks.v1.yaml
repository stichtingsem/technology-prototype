openapi: '3.0.0'
info:
  description: |-
    The proposed architecture for the new ecosystem is based on an Event model, where each provider of data to the ecosystem provides a mechanism for other participants to securely subscribe to events that are of interest to them.

    The Webhook API is the mechanism, in conjunction with the Event API, that enables this event based notification mechanism to function reliably.  It enables subscribers to create a webhook registration with the provider, so that the provider can send a POST to the provided URL when an event occurs.

    This forms the 'near real time' element of the architecture, and enables subscribers to retrieve information on all changes immediately, while still retaining full control of when that data will be subsequently processed.

    Notes:
      - Ideally you would have one webhook registration per subscriber, but we should allow for multiple.
      - It should be possible to filter to only events you are interested in as part of the configuration, to avoid sending events that then need to be discarded.
      - Event filters should automatically be applied aligned with oauth scopes in place for the subscriber - e.g. don't allow events to go to a subscriber for entities that they are not allowed to access.

  version: 1.0.0
  title: Generic Web Hook API

  # put the contact info for your development or API team
  contact:
    email: clifton@infinitaslearning.com
  license:
    name: MIT
    url: 'https://opensource.org/licenses/MIT'

# tags are used for organizing operations
tags:
- name: webhooks
  description: Operations related to webhook management

paths:
  /webhook:
    get:
      tags:
      - webhooks
      summary: Retrieve list of webhooks
      description: retrieves list of webhooks registered
      operationId: listWebhooks
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webhooks'
    post:
      tags:
      - webhooks
      description: creates or updates a webhook
      operationId: createUpdateWebhook
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/definitions/webhook'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webhook'

  /webhook/{webhookId}:
    get:
      tags:
      - webhooks
      summary: Retrieve webhook by ID
      description: retrieves specific of webhook
      operationId: getWebhook
      parameters:
        - name: webhookId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webhook'
    delete:
      tags:
      - webhooks
      description: deletes a webhook
      operationId: deleteWebhook
      parameters:
        - name: webhookId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK

components:
  schemas:
    webhooks:
        type: array
        items:
          $ref: '#/components/schemas/webhook'
    webhook:
      type: object
      required:
        - id
        - url
        - enabled_events
      properties:
        id:
          type: string
          format: uuid
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
        url:
          type: string
          description: The url that will be called when any of the subscribed events occur
          example: http://lms.nl/api/webhook
        enabled_events:
          type: array
          description: Allow filtering of events that should be sent to this endpoint
          items:
            type: string
          example: ["la:usage", "la:results"]
