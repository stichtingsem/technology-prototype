openapi: 3.0.0
info:
  title: Usage API
  version: '1.0'
  description: |
    This is an API provided by the Learning Application in the SEM ecosystem, and is designed to enable a learning application to make information about usage of a product by a teacher or student to be confirmed to the Marketplace

    It is envisaged that the service implementing this API, also implements the generic [Events](https://stichtingsem.stoplight.io/docs/sem-technology-prototype/reference/events.v1.yaml) and [Webhooks](https://stichtingsem.stoplight.io/docs/sem-technology-prototype/reference/webhooks.v1.yaml) API to enable subscription to changes vs polling.

    Events generated by the Usage API are connected to (first) use of the product.

     - `la.usage.first` - First time
     - `la.usage.ongoing` - Regular usage
  contact:
    name: SEM
    url: 'https://stichtingsem.org/'
servers:
  - url: 'https://example.stichtingsem.org/api'
    description: usage
paths:
  '/usage/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: Specific identifier of an product.
    get:
      summary: Get a specific entitlement
      tags:
        - usage
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Usage'
            application/xml:
              schema:
                type: object
                properties: {}
      operationId: get-usage-by-product-id
      description: 'Retrieve the full bla bla, needs to confirm that the caller is able to access either based on their provider information (they can only see their own usage) in the case of the provider scope.'
      security:
        - API Key - 1:
            - la.usage
  /usage/product:
    parameters: []
    get:
      summary: Get all entitlements for a specific vendor (Learning Application Provider)
      tags:
        - entitlements
        - provider
      parameters:
        - in: query
          name: status
          description: |
            Filter by status
          schema:
            type: string
            example: active
        - in: query
          name: start
          description: 'Start point for pagination of results, defaults to 0,'
          schema:
            type: integer
            format: int32
          examples:
            default:
              value: 0
              summary: The start point for pagination
        - in: query
          name: limit
          description: 'Limit of number of results returned by page, defaults to 20 with max 100.'
          schema:
            type: integer
            maximum: 100
            format: int32
          examples:
            default:
              value: 20
              summary: The default value if none is provided
            max:
              value: 100
              summary: The largest recommended page size
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Usage'
      operationId: get-usage-procuct-id
      security:
        - API Key - 1:
            - la-usage
      description: |-
        Get all bla bla
          It is assumed that at the point of setup and provision of an API key, that the provider name is also stored against the API key by the marketplace, so that all calls with this key will be filtered to that specific provider in the response.

        This API has pagination, using `start` and `limit`, with an optional `status` filter.
  securitySchemes:
    API Key - 1:
      type: oauth2
      flows:
        implicit:
          scopes:
            mp.entitlements.school: Can see all entitlements created for a specific school regardless of vendor (e.g. a LMS)
            mp.entitlements.provider: Can see all entitlements created for products that you sell in the Marketplace (e.g. a LA)
tags:
  - name: entitlements
  - name: provider
  - name: school
components:
  schemas:
    Usage:
      title: Usage
      type: object
      properties:
        id:
          type: string
        who:
          type: object
          properties:
            studenteckid:
              type: string
            school:
              type: string
        what:
          type: string
      required:
        - id
      description: ''
