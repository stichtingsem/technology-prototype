openapi: 3.0.0
info:
  title: Usage API
  version: '1.0'
  description: |
    This is an API provided by the Learning Application in the SEM ecosystem, and is designed to enable a learning application to make information about usage of a product by a teacher or student to be confirmed to the Marketplace.

    The Usage events are send when a student uses the product in the entitlement. A LA can choose to send the usage per individual or if the entitlement is on school level , skip the student id and send the anonymous total.

    In the Usage get api has the option to return the usage including a list of students who have used product in this entitlement 

    # Events

    It is envisaged that the service implementing this API, also implements the generic [Events](https://stichtingsem.stoplight.io/docs/sem-technology-prototype/reference/events.v1.yaml) and [Webhooks](https://stichtingsem.stoplight.io/docs/sem-technology-prototype/reference/webhooks.v1.yaml) API to enable subscription to changes vs polling.


    Events generated by the Usage API are connected to (first) use of the product.
     - `la.usage.first` - First time
     - `la.usage.ongoing` - Regular usage
  contact:
    name: SEM
    url: 'https://stichtingsem.org/'
servers:
  - url: 'https://example.stichtingsem.org/api'
    description: usage
paths:
  '/usage/{entitlementid}':
    parameters:
      - schema:
          type: string
        name: entitlementid
        in: path
        required: true
    get:
      summary: Get usage for a specific entitlement
      tags:
        - usage
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/usage'
            application/xml:
              schema:
                type: object
                properties: {}
      operationId: get-usage-by-entitlement-id
      description: |-
        Retrieve the full usage based on a entitlement-id, needs to confirm that the caller is able to access either based on their provider information (they can only see their own usage) in the case of the provider scope.
        This API has pagination, using `start` and `limit`, with an optional `status` filter.
      security:
        - APIKey:
            - la.usage.first
            - la.usage.ongoing
      parameters:
        - in: query
          name: status
          description: |
            Filter by status
          schema:
            type: string
            enum:
              - uniqueActivation
              - weeklyActivation
              - monthlyActivation
              - InitialActivation
        - in: query
          name: start
          description: 'Start point for pagination of results, defaults to 0,'
          schema:
            type: integer
            format: int32
          examples:
            default:
              value: 0
              summary: The start point for pagination
        - in: query
          name: limit
          description: 'Limit of number of results returned by page, defaults to 20 with max 100.'
          schema:
            type: integer
            maximum: 100
            format: int32
          examples:
            default:
              value: 20
              summary: The default value if none is provided
            max:
              value: 100
              summary: The largest recommended page size
tags:
  - name: entitlements
  - name: usage
components:
  schemas:
    usage-event:
      title: usage API event
      type: object
      description: |
        This is an API provided by the LA in the SEM ecosystem, and is designed to enable a MP to make the usage information about teachers and learners of product available to the rest of the ecosystem in a security and privacy concious way.
      properties:
        entitlementId:
          type: string
        schemaVersion:
          type: integer
          description: 'schema version of this event/object. Start with 0, inclement when we have changes, so we know how to deserialise.'
        schoolId:
          type: string
        id:
          type: string
          description: unique id of user who used the product of this entitlement (optional)
        eckid:
          type: string
        usageDate:
          type: string
          format: date
        usageType:
          type: string
          enum:
            - uniqueActivation
            - weeklyActivation
            - monthlyActivation
            - InitialActivation
          description: Type of usage report. Currently only initialActivations are implemented
        totalForThisEntitlement:
          type: integer
          description: Accumulated total for this entitlement
      required:
        - entitlementId
        - usageDate
        - usageType
    usage:
      title: usage API
      type: object
      description: |
        This is an API provided by the LA in the SEM ecosystem, and is designed to enable a MP to make the usage information about teachers and learners of product available to the rest of the ecosystem in a security and privacy concious way.
      properties:
        entitlementId:
          type: string
        schemaVersion:
          type: integer
          description: 'schema version of this event/object. Start with 0, inclement when we have changes, so we know how to deserialise.'
        schoolId:
          type: string
        id:
          type: string
          description: unique id of user who used the product of this entitlement (optional)
        eckid:
          type: string
        totalForThisEntitlement:
          type: integer
          description: Accumulated total for this entitlement
        entitleeUsageList:
          type: array
          items:
            $ref: '#/components/schemas/entitlee'
      required:
        - entitlementId
    entitlee:
      title: entitlee
      type: object
      properties:
        id:
          type: string
        eckId:
          type: string
        firstUsed:
          type: string
          format: date-time
        lastUsed:
          type: string
          format: date-time
      required:
        - id
        - firstUsed
  securitySchemes:
    APIKey:
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: ''
          refreshUrl: ''
          scopes:
            la.usage.ongoing: ''
            la.usage.first: ''
        implicit:
          authorizationUrl: ''
          refreshUrl: ''
          scopes:
            la.usage.ongoing: ''
            la.usage.first: ''
      description: ''
