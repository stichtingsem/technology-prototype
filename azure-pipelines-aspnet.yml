trigger:
  - master
  - development

pool:
  vmImage: "windows-latest"

variables:
  buildConfiguration: "Release"
#  NUGET_PACKAGES: $(Pipeline.Workspace)/.nuget/packages
#  npm_config_cache: $(Pipeline.Workspace)/.npm

steps:
#  - task: Cache@2
#    inputs:
#      key: 'nuget | "$(Agent.OS)" | **/*.csproj'
#      restoreKeys: |
#        nuget | "$(Agent.OS)"
#        nuget
#      path: $(NUGET_PACKAGES)
#    displayName: Cache NuGet packages

#  - task: DotNetCoreCLI@2
#    inputs:
#      command: "restore"
#      projects: "IL.Authentication.sln"
#      arguments: "--configuration $(buildConfiguration)"
#      feedsToUse: "select"
#      vstsFeed: "e42a86c2-354c-4655-a0bc-5c0c6870ca2b"
#      includeNuGetOrg: true
#    displayName: "dotnet restore"

  - task: DotNetCoreCLI@2
    inputs:
      command: "build"
      projects: "SEM.WebhookService.sln"
      arguments: "--configuration $(buildConfiguration)"
    displayName: "dotnet build $(buildConfiguration)"
  - task: DotNetCoreCLI@2
    inputs:
      command: "test"
      projects: "**/*Tests.csproj"
    displayName: dotnet test
  - task: DotNetCoreCLI@2
    inputs:
      command: publish
      publishWebProjects: false
      zipAfterPublish: false
      modifyOutputPath: true
      projects: RestService\RestService.csproj
      arguments: "--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)"
    displayName: "dotnet publish"
  - task: ArchiveFiles@2
    inputs:
      rootFolderOrFile: '$(Build.ArtifactStagingDirectory)\\SEM.WebhookService\\'
      includeRootFolder: false
      archiveType: "zip"
      archiveFile: '$(Build.ArtifactStagingDirectory)\\web.zip'
      replaceExistingArchive: true
  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: '$(Build.ArtifactStagingDirectory)\\web.zip'
      artifactName: "WebPackage"


  - task: DotNetCoreCLI@2
    inputs:
      command: publish
      publishWebProjects: false
      zipAfterPublish: false
      modifyOutputPath: true
      projects: IL.Authentication.AdminUI\src\IL.Authentication.AdminUI.Admin\IL.Authentication.AdminUI.Admin.csproj
      arguments: "--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)"
    displayName: "dotnet publish"
  - task: ArchiveFiles@2
    inputs:
      rootFolderOrFile: '$(Build.ArtifactStagingDirectory)\\IL.Authentication.AdminUI.Admin\\'
      includeRootFolder: false
      archiveType: "zip"
      archiveFile: '$(Build.ArtifactStagingDirectory)\\AdminWeb.zip'
      replaceExistingArchive: true
  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: '$(Build.ArtifactStagingDirectory)\\AdminWeb.zip'
      artifactName: "AdminWeb"
